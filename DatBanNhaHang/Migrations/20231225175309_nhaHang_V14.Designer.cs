// <auto-generated />
using System;
using DatBanNhaHang.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DatBanNhaHang.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231225175309_nhaHang_V14")]
    partial class nhaHang_V14
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DatBanNhaHang.Entities.NguoiDung.Admin", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("AdminName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<string>("QueQuan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("SDT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ngaysinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("AdminName")
                        .IsUnique()
                        .HasFilter("[AdminName] IS NOT NULL");

                    b.HasIndex("ParentID");

                    b.HasIndex("RoleID");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NguoiDung.RefreshToken", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("AdminID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiredTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("AdminID");

                    b.HasIndex("UserID");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NguoiDung.Role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NguoiDung.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ngayTao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NguoiDung.XacNhanEmail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("AdminID")
                        .HasColumnType("int");

                    b.Property<bool>("DaXacNhan")
                        .HasColumnType("bit");

                    b.Property<string>("MaXacNhan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ThoiGianHetHan")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("AdminID");

                    b.HasIndex("UserID");

                    b.ToTable("XacNhanEmail");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NhaHang.BaiViet", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("int");

                    b.Property<string>("AnhBlogURl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayDang")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("AdminId");

                    b.ToTable("BaiViet");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NhaHang.Ban", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<double?>("GiaTien")
                        .HasColumnType("float");

                    b.Property<string>("HinhAnhBanURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LoaiBanID")
                        .HasColumnType("int");

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoBan")
                        .HasColumnType("int");

                    b.Property<int?>("SoNguoiToiDa")
                        .HasColumnType("int");

                    b.Property<string>("TrangThaiBan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViTri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("LoaiBanID");

                    b.ToTable("Ban");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NhaHang.DauBep", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("AnhDauBepURl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ngaySinh")
                        .HasColumnType("datetime2");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("DauBep");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NhaHang.HoaDon", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("BanID")
                        .HasColumnType("int");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaGiaoDich")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenHoaDon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ThoiGianBatDauThucTe")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianDat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianDuKienBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianDuKienKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianHuyDat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianKetThucThucTe")
                        .HasColumnType("datetime2");

                    b.Property<double?>("TongTien")
                        .HasColumnType("float");

                    b.Property<int?>("TrangThaiHoaDonID")
                        .HasColumnType("int");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("BanID");

                    b.HasIndex("TrangThaiHoaDonID");

                    b.HasIndex("userId");

                    b.ToTable("HoaDon");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NhaHang.LienHe", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool?>("DaTraLoi")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hoten")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ThoiGianGui")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianTraLoi")
                        .HasColumnType("datetime2");

                    b.Property<string>("TieuDe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("LienHe");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NhaHang.LoaiBan", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("TenLoaiBan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("LoaiBan");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NhaHang.LoaiMonAn", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("TenLoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("LoaiMonAn");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NhaHang.MonAn", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("AnhMonAn1URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("GiaTien")
                        .HasColumnType("float");

                    b.Property<int>("LoaiMonAnID")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("LoaiMonAnID");

                    b.ToTable("MonAn");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NhaHang.NhanXet", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("AnhURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChuThich")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("NhanXet");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NhaHang.TrangThaiHoaDon", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("TenTrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("TrangThaiHoaDon");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NguoiDung.Admin", b =>
                {
                    b.HasOne("DatBanNhaHang.Entities.NguoiDung.Admin", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentID");

                    b.HasOne("DatBanNhaHang.Entities.NguoiDung.Role", "Role")
                        .WithMany("Admin")
                        .HasForeignKey("RoleID");

                    b.Navigation("Parent");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NguoiDung.RefreshToken", b =>
                {
                    b.HasOne("DatBanNhaHang.Entities.NguoiDung.Admin", "Admin")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("AdminID");

                    b.HasOne("DatBanNhaHang.Entities.NguoiDung.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserID");

                    b.Navigation("Admin");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NguoiDung.XacNhanEmail", b =>
                {
                    b.HasOne("DatBanNhaHang.Entities.NguoiDung.Admin", "Admin")
                        .WithMany("emails")
                        .HasForeignKey("AdminID");

                    b.HasOne("DatBanNhaHang.Entities.NguoiDung.User", "user")
                        .WithMany("xacNhanEmails")
                        .HasForeignKey("UserID");

                    b.Navigation("Admin");

                    b.Navigation("user");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NhaHang.BaiViet", b =>
                {
                    b.HasOne("DatBanNhaHang.Entities.NguoiDung.Admin", "Admin")
                        .WithMany("bLogs")
                        .HasForeignKey("AdminId");

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NhaHang.Ban", b =>
                {
                    b.HasOne("DatBanNhaHang.Entities.NhaHang.LoaiBan", "LoaiBan")
                        .WithMany("ban")
                        .HasForeignKey("LoaiBanID");

                    b.Navigation("LoaiBan");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NhaHang.HoaDon", b =>
                {
                    b.HasOne("DatBanNhaHang.Entities.NhaHang.Ban", "Ban")
                        .WithMany()
                        .HasForeignKey("BanID");

                    b.HasOne("DatBanNhaHang.Entities.NhaHang.TrangThaiHoaDon", "TrangThaiHoaDon")
                        .WithMany("hoaDon")
                        .HasForeignKey("TrangThaiHoaDonID");

                    b.HasOne("DatBanNhaHang.Entities.NguoiDung.User", "KhachHang")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ban");

                    b.Navigation("KhachHang");

                    b.Navigation("TrangThaiHoaDon");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NhaHang.MonAn", b =>
                {
                    b.HasOne("DatBanNhaHang.Entities.NhaHang.LoaiMonAn", "LoaiMonAn")
                        .WithMany("MonAn")
                        .HasForeignKey("LoaiMonAnID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiMonAn");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NguoiDung.Admin", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("RefreshTokens");

                    b.Navigation("bLogs");

                    b.Navigation("emails");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NguoiDung.Role", b =>
                {
                    b.Navigation("Admin");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NguoiDung.User", b =>
                {
                    b.Navigation("RefreshTokens");

                    b.Navigation("xacNhanEmails");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NhaHang.LoaiBan", b =>
                {
                    b.Navigation("ban");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NhaHang.LoaiMonAn", b =>
                {
                    b.Navigation("MonAn");
                });

            modelBuilder.Entity("DatBanNhaHang.Entities.NhaHang.TrangThaiHoaDon", b =>
                {
                    b.Navigation("hoaDon");
                });
#pragma warning restore 612, 618
        }
    }
}
